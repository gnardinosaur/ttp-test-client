{"ast":null,"code":"var _jsxFileName = \"/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/components/UserStocks.js\";\nimport React from 'react';\nimport { List, Container, Grid } from 'semantic-ui-react';\n\nclass UserStocks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userStocks: [],\n      summedArray: []\n    };\n\n    this.buildUserStockObject = () => {\n      //create a simple object of ticker: number of shares\n      const tickersAndQtyObject = {};\n      [...this.state.userStocks].forEach(el => {\n        if (tickersAndQtyObject[el.ticker]) {\n          tickersAndQtyObject[el.ticker].numShares += el.num_shares;\n        } else {\n          tickersAndQtyObject[el.ticker] = el.num_shares;\n          tickersAndQtyObject[el.ticker].currentPrice = this.props.currentPrice[el.ticker];\n        }\n      }); //convert the object back to an array with summed up number of shares \n      // const summedArray = Object.entries(tickersAndQtyObject)\n      // this.setState({ summedArray })\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/api/v1/users/${this.props.user.id}/transactions`).then(resp => resp.json()).then(userStocks => this.setState({\n      userStocks\n    }, () => this.buildUserStockObject()));\n  }\n\n  render() {\n    console.log(this.props);\n    const stockList = this.state.summedArray.map(el => {\n      return React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 3,\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, el[0]), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, el[1], \" Shares\"), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.currentPrices[el[0]] * el[1]))));\n    });\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(List, {\n      divided: true,\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, stockList));\n  }\n\n}\n\n;\nexport default UserStocks;","map":{"version":3,"sources":["/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/components/UserStocks.js"],"names":["React","List","Container","Grid","UserStocks","Component","state","userStocks","summedArray","buildUserStockObject","tickersAndQtyObject","forEach","el","ticker","numShares","num_shares","currentPrice","props","componentDidMount","fetch","user","id","then","resp","json","setState","render","console","log","stockList","map","currentPrices"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,QAAsC,mBAAtC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,WAAW,EAAE;AAFP,KAF+B;;AAAA,SAavCC,oBAbuC,GAahB,MAAM;AAC3B;AACA,YAAMC,mBAAmB,GAAG,EAA5B;AACA,OAAC,GAAG,KAAKJ,KAAL,CAAWC,UAAf,EAA2BI,OAA3B,CAAmCC,EAAE,IAAI;AACvC,YAAGF,mBAAmB,CAACE,EAAE,CAACC,MAAJ,CAAtB,EAAkC;AAChCH,UAAAA,mBAAmB,CAACE,EAAE,CAACC,MAAJ,CAAnB,CAA+BC,SAA/B,IAA4CF,EAAE,CAACG,UAA/C;AACD,SAFD,MAEO;AACLL,UAAAA,mBAAmB,CAACE,EAAE,CAACC,MAAJ,CAAnB,GAAiCD,EAAE,CAACG,UAApC;AACAL,UAAAA,mBAAmB,CAACE,EAAE,CAACC,MAAJ,CAAnB,CAA+BG,YAA/B,GAA8C,KAAKC,KAAL,CAAWD,YAAX,CAAwBJ,EAAE,CAACC,MAA3B,CAA9C;AACD;AACF,OAPD,EAH2B,CAW3B;AACA;AACA;AACD,KA3BsC;AAAA;;AAOvCK,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAE,sCAAqC,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,EAAG,eAA1D,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMf,UAAU,IAAI,KAAKkB,QAAL,CAAc;AAAElB,MAAAA;AAAF,KAAd,EAA8B,MAAM,KAAKE,oBAAL,EAApC,CAFpB;AAGD;;AAkBDiB,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,UAAMY,SAAS,GAAG,KAAKvB,KAAL,CAAWE,WAAX,CAAuBsB,GAAvB,CAA2BlB,EAAE,IAAI;AACjD,aACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAkB,QAAA,OAAO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,EAAE,CAAC,CAAD,CADL,CADF,EAIE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,EAAE,CAAC,CAAD,CADL,YAJF,EAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKN,KAAL,CAAWyB,aAAX,CAAyBnB,EAAE,CAAC,CAAD,CAA3B,IAAkCA,EAAE,CAAC,CAAD,CADvC,CAPF,CADF,CADA,CADF;AAiBD,KAlBiB,CAAlB;AAoBA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiB,SADH,CAFF,CADF;AAQD;;AA3DsC;;AA6DxC;AAED,eAAezB,UAAf","sourcesContent":["import React from 'react';\nimport { List, Container, Grid } from 'semantic-ui-react';\n\nclass UserStocks extends React.Component {\n\n  state = {\n    userStocks: [],\n    summedArray: []\n  }\n\n  componentDidMount(){\n    fetch(`http://localhost:3000/api/v1/users/${this.props.user.id}/transactions`)\n    .then(resp => resp.json())\n    .then(userStocks => this.setState({ userStocks }, () => this.buildUserStockObject()))\n  };\n\n  buildUserStockObject = () => {\n    //create a simple object of ticker: number of shares\n    const tickersAndQtyObject = {};\n    [...this.state.userStocks].forEach(el => {\n      if(tickersAndQtyObject[el.ticker]){\n        tickersAndQtyObject[el.ticker].numShares += el.num_shares\n      } else {\n        tickersAndQtyObject[el.ticker] = el.num_shares;\n        tickersAndQtyObject[el.ticker].currentPrice = this.props.currentPrice[el.ticker];\n      }\n    })\n    //convert the object back to an array with summed up number of shares \n    // const summedArray = Object.entries(tickersAndQtyObject)\n    // this.setState({ summedArray })\n  }\n\n  render(){\n    console.log(this.props)\n    const stockList = this.state.summedArray.map(el => {\n      return (\n        <List.Item>\n        <Grid columns={3} divided >\n          <Grid.Row>\n            <Grid.Column>\n              {el[0]}\n            </Grid.Column>\n            <Grid.Column>\n              {el[1]} Shares\n            </Grid.Column>\n            <Grid.Column>\n              {this.state.currentPrices[el[0]] * el[1]}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        </List.Item>\n      )\n    });\n\n    return(\n      <Container>\n        {/* render list of user's stocks */}\n        <List divided relaxed> \n          {stockList}\n        </List>\n      </Container>\n    )\n  }\n\n};\n\nexport default UserStocks;"]},"metadata":{},"sourceType":"module"}