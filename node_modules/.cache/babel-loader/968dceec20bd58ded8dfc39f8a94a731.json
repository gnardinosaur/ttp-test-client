{"ast":null,"code":"var _jsxFileName = \"/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Register from './components/Register';\nimport SignIn from './components/SignIn';\nimport Transactions from './components/Transactions';\nimport Portfolio from './components/Portfolio';\nimport { convertStringToNum } from './constants/formatCurrency';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        name: '',\n        email: '',\n        cash: 0\n      }\n    };\n\n    this.setUser = user => {\n      this.setState({\n        user\n      });\n    };\n\n    this.decreaseCash = totalPurchasePrice => {\n      const newBalance = parseInt(this.state.user.cash) - convertStringToNum(totalPurchasePrice);\n      this.setState({\n        user: { ...this.state.user,\n          cash: newBalance\n        }\n      }, () => this.persistNewBalance(newBalance));\n    };\n\n    this.persistNewBalance = newBalance => {\n      fetch(`http://localhost:3000/api/v1/users/${this.state.user.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            cash: newBalance\n          }\n        })\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/sign_in\",\n      render: routerProps => React.createElement(SignIn, Object.assign({}, routerProps, {\n        user: this.state.user,\n        setUser: this.setUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/portfolio\",\n      render: routerProps => React.createElement(Portfolio, Object.assign({\n        user: this.state.user\n      }, routerProps, {\n        decreaseCash: this.decreaseCash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/transactions\",\n      render: routerProps => React.createElement(Transactions, Object.assign({}, routerProps, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: routerProps => React.createElement(Register, Object.assign({}, routerProps, {\n        user: this.state.user,\n        setUser: this.setUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/App.js"],"names":["React","Switch","Route","Register","SignIn","Transactions","Portfolio","convertStringToNum","App","Component","state","user","name","email","cash","setUser","setState","decreaseCash","totalPurchasePrice","newBalance","parseInt","persistNewBalance","fetch","id","method","headers","body","JSON","stringify","render","routerProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Register from './components/Register';\nimport SignIn from './components/SignIn';\nimport Transactions from './components/Transactions';\nimport Portfolio from './components/Portfolio';\nimport { convertStringToNum } from './constants/formatCurrency';\n\nclass App extends React.Component {\n\n  state = {\n    user: {\n      name: '',\n      email: '',\n      cash: 0\n    }\n  };\n\n  setUser = (user) => {\n    this.setState({ user })\n  }\n\n  decreaseCash = (totalPurchasePrice) => {\n    const newBalance = parseInt(this.state.user.cash) - convertStringToNum(totalPurchasePrice)\n    this.setState({ \n      user: {\n        ...this.state.user,\n        cash: newBalance\n      }\n    }, () => this.persistNewBalance(newBalance))\n  };\n\n  persistNewBalance = (newBalance) => {\n    fetch(`http://localhost:3000/api/v1/users/${this.state.user.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          cash: newBalance\n        }\n      })\n    })\n  }\n\n  render(){\n    return (\n      <div className='App'>\n        <Switch>\n          <Route path='/sign_in' render={(routerProps) => <SignIn {...routerProps} user={this.state.user} setUser={this.setUser} />} />\n          <Route path='/portfolio' render={(routerProps)  => <Portfolio user={this.state.user} {...routerProps} decreaseCash={this.decreaseCash} />} />\n          <Route path='/transactions' render={(routerProps) => <Transactions {...routerProps} user={this.state.user}/>} />\n          <Route path='/' render={(routerProps) => <Register {...routerProps} user={this.state.user} setUser={this.setUser} />} />\n        </Switch>\n      </div>\n    )\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}