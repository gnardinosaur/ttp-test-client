{"ast":null,"code":"var _jsxFileName = \"/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/components/Portfolio.js\";\nimport React from 'react';\nimport { Header, List, Container, Grid, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { tickers } from '../constants/tickerDropdown';\n\nclass Portfolio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stocks: [],\n      buy: {\n        ticker: '',\n        qty: 0\n      }\n    };\n\n    this.componentDidMount = () => {\n      fetch('http://localhost:3000/api/v1/stocks').then(resp => resp.json()).then(stocksArray => this.saveStockData(stocksArray));\n    };\n\n    this.saveStockData = stocksArray => {\n      this.setState({\n        stocks: stocksArray\n      });\n    };\n\n    this.handleSelect = (e, data) => {\n      this.setState({\n        buy: { ...this.state.buy,\n          ticker: data.value\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        buy: { ...this.state.buy,\n          qty: e.target.value\n        }\n      });\n    };\n\n    this.buyStock = () => {\n      //if qty * current stock price < user.cash then fetch, otherwise throw error  \n      const ticker = this.state.buy.ticker;\n      const stock = this.state.stocks;\n      debugger;\n      const totalPurchasePrice = this.state.buy.qty * stock[1];\n      fetch('http://localhost:3000/api/v1/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          stock: this.state.buy\n        })\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state); //format currency integer to $USD\n\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    });\n    return React.createElement(Container, {\n      className: \"portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(List, {\n      as: \"a\",\n      divided: true,\n      horizontal: true,\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      disabled: true,\n      content: React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Portfolio\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(List.Item, {\n      id: \"trans-link\",\n      onClick: () => this.props.history.push('/transactions'),\n      content: React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Transactions\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Portfolio ($$$)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      columns: 2,\n      divided: true,\n      relaxed: \"very\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(List, {\n      divided: true,\n      relaxed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Cash - \", formatter.format(this.props.user.cash)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.buyStock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      onChange: this.handleSelect,\n      placeholder: \"Ticker\",\n      clearable: true,\n      selection: true,\n      options: tickers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"qty\",\n      type: \"number\",\n      min: 0,\n      placeholder: \"Qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"buy-btn\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Buy\"))))));\n  }\n\n}\n\n;\nexport default Portfolio;","map":{"version":3,"sources":["/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/components/Portfolio.js"],"names":["React","Header","List","Container","Grid","Form","Button","Dropdown","tickers","Portfolio","Component","state","stocks","buy","ticker","qty","componentDidMount","fetch","then","resp","json","stocksArray","saveStockData","setState","handleSelect","e","data","value","handleChange","target","buyStock","stock","totalPurchasePrice","method","headers","body","JSON","stringify","render","console","log","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","props","history","push","format","user","cash"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Header, List, Container, Grid, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { tickers } from '../constants/tickerDropdown';\n\nclass Portfolio extends React.Component {\n\n  state = {\n    stocks: [],\n    buy: {\n      ticker: '',\n      qty: 0\n    }\n  };\n\n  componentDidMount = () => {\n    fetch('http://localhost:3000/api/v1/stocks')\n    .then(resp => resp.json())\n    .then(stocksArray => this.saveStockData(stocksArray))\n  };\n\n  saveStockData = (stocksArray) => {\n    this.setState({\n      stocks: stocksArray\n    });\n  };\n\n\n  handleSelect = (e, data) => {\n    this.setState({\n      buy: {\n        ...this.state.buy,\n        ticker: data.value\n      }\n    })\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      buy: {\n        ...this.state.buy,\n        qty: e.target.value\n      }\n    })\n  }\n\n  buyStock = () => {\n    //if qty * current stock price < user.cash then fetch, otherwise throw error  \n    const ticker = this.state.buy.ticker\n    const stock = this.state.stocks\n    debugger;\n    const totalPurchasePrice = this.state.buy.qty * stock[1]\n\n    fetch('http://localhost:3000/api/v1/transactions',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        stock: this.state.buy\n      })\n    })\n  }\n\n  render(){\n    console.log(this.state)\n\n    //format currency integer to $USD\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    });\n\n    return (\n      <Container className='portfolio'>\n        <List as='a' divided={true} horizontal floated='right'>\n          <List.Item disabled={true} content={<u>Portfolio</u>} />\n          <List.Item id='trans-link' onClick={() => this.props.history.push('/transactions')}content={<u>Transactions</u>} />\n        </List>\n        <br />\n\n        <Header as='h1' textAlign='left'>Portfolio ($$$)</Header>\n        <br />\n\n        <Grid columns={2} divided relaxed='very'>\n          <Grid.Row>\n            <Grid.Column>\n              <List divided relaxed>\n                {/* list of stocks go here */}\n              </List>\n            </Grid.Column>\n            <Grid.Column width={5}>\n              <Header as='h3' textAlign='left'>Cash - {formatter.format(this.props.user.cash)}</Header>\n              <br />\n              <Form onSubmit={this.buyStock}>\n                <Form.Field>\n                  <Dropdown onChange={this.handleSelect} placeholder='Ticker' clearable selection options={tickers} />\n                </Form.Field>\n                <Form.Field onChange={this.handleChange}>\n                  <input name='qty' type='number' min={0} placeholder='Qty' />\n              </Form.Field>\n              <Button className='buy-btn' type='submit'>Buy</Button>\n              </Form>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    )\n  };\n};\n\nexport default Portfolio; \n\n"]},"metadata":{},"sourceType":"module"}