{"ast":null,"code":"var _jsxFileName = \"/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/components/Portfolio.js\";\nimport React from 'react';\nimport PurchaseStocks from './PurchaseStocks';\nimport { Header, List, Container } from 'semantic-ui-react';\nimport { formatter } from '../constants/formatCurrency';\n\nclass Portfolio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userStocks: [],\n      stocks: {},\n      buy: {\n        ticker: '',\n        qty: 0\n      },\n      error: false\n    };\n\n    this.buyStockOrThrowError = () => {\n      //if qty * current stock price < user.cash then fetch, otherwise throw error  \n      const stockPrice = this.state.stocks[this.state.buy.ticker];\n      const totalPurchasePrice = formatter.format(this.state.buy.qty * stockPrice);\n\n      if (totalPurchasePrice < this.props.user.cash) {\n        this.purchaseStock();\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.purchaseStock = () => {\n      const stockPrice = this.state.stocks[this.state.buy.ticker];\n      fetch('http://localhost:3000/api/v1/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          stock: this.state.buy,\n          price: stockPrice,\n          user_id: this.props.user.id\n        })\n      }).then(resp => resp.json()).then(newTransaction => {\n        this.setState({\n          userStocks: [...this.state.userStocks, newTransaction],\n          buy: {\n            ticker: '',\n            qty: 0\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      className: \"portfolio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(List, {\n      as: \"a\",\n      divided: true,\n      horizontal: true,\n      floated: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      disabled: true,\n      content: React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Portfolio\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(List.Item, {\n      id: \"trans-link\",\n      onClick: () => this.props.history.push('/transactions'),\n      content: React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Transactions\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Portfolio ($$$)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(PurchaseStocks, {\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Portfolio;","map":{"version":3,"sources":["/Users/heatherschechter/Desktop/techTalentPipeline/frontend/ttp_app/src/components/Portfolio.js"],"names":["React","PurchaseStocks","Header","List","Container","formatter","Portfolio","Component","state","userStocks","stocks","buy","ticker","qty","error","buyStockOrThrowError","stockPrice","totalPurchasePrice","format","props","user","cash","purchaseStock","setState","fetch","method","headers","body","JSON","stringify","stock","price","user_id","id","then","resp","json","newTransaction","render","history","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PurchaseStocks from './PurchaseStocks';\nimport { Header, List, Container } from 'semantic-ui-react';\nimport { formatter } from '../constants/formatCurrency';\n\nclass Portfolio extends React.Component {\n\n  state = {\n    userStocks: [],\n    stocks: {},\n    buy: {\n      ticker: '',\n      qty: 0\n    },\n    error: false\n  };\n\n  buyStockOrThrowError = () => {\n    //if qty * current stock price < user.cash then fetch, otherwise throw error  \n    const stockPrice = this.state.stocks[this.state.buy.ticker];\n    const totalPurchasePrice = formatter.format(this.state.buy.qty * stockPrice);\n    \n    if(totalPurchasePrice < this.props.user.cash) {\n      this.purchaseStock()\n    } else {\n      this.setState({ error: true })\n    }\n  }\n\n  purchaseStock = () => {\n    const stockPrice = this.state.stocks[this.state.buy.ticker];\n    fetch('http://localhost:3000/api/v1/transactions',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        stock: this.state.buy,\n        price: stockPrice,\n        user_id: this.props.user.id\n      })\n    })\n    .then(resp => resp.json())\n    .then(newTransaction => {\n      this.setState({\n        userStocks: [...this.state.userStocks, newTransaction],\n        buy: {\n          ticker: '',\n          qty: 0\n        }\n      })\n    })\n  }\n\n  render(){\n    return (\n      <Container className='portfolio'>\n        <List as='a' divided={true} horizontal floated='right'>\n          <List.Item disabled={true} content={<u>Portfolio</u>} />\n          <List.Item id='trans-link' onClick={() => this.props.history.push('/transactions')}content={<u>Transactions</u>} />\n        </List>\n        <br />\n        \n        <Header as='h1' textAlign='left'>Portfolio ($$$)</Header>\n        <br />\n        <PurchaseStocks user={this.props.user} />\n      </Container>\n    )\n  };\n};\n\nexport default Portfolio; \n\n"]},"metadata":{},"sourceType":"module"}